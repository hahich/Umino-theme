<section class="new-arrivals fade-in-left">
  <div class="fc-container">
    <h2>{{ section.settings.title }}</h2>
    <p>{{ section.settings.description }}</p>
  </div>

  <div class="new-arrivals-slider-wrapper">
    <div class="carousel-controls">
      <button class="carousel-prev slider-prev" aria-label="Previous">
        <svg width="6" height="10" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M5.46875 8.86328C5.60417 8.9987 5.67188 9.16016 5.67188 9.34766C5.67188 9.52474 5.60417 9.67578 5.46875 9.80078C5.34375 9.9362 5.1875 10.0039 5 10.0039C4.8125 10.0039 4.65625 9.9362 4.53125 9.80078L0.53125 5.80078C0.395833 5.67578 0.328125 5.52474 0.328125 5.34766C0.328125 5.16016 0.395833 4.9987 0.53125 4.86328L4.53125 0.863281C4.65625 0.738281 4.8125 0.675781 5 0.675781C5.1875 0.675781 5.34375 0.738281 5.46875 0.863281C5.60417 0.998698 5.67188 1.16016 5.67188 1.34766C5.67188 1.52474 5.60417 1.67578 5.46875 1.80078L1.9375 5.33203L5.46875 8.86328Z" fill="#000"/>
        </svg>
      </button>
      <button class="carousel-next slider-next" aria-label="Next">
        <svg width="6" height="10" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M1.46875 9.80078C1.34375 9.9362 1.1875 10.0039 1 10.0039C0.8125 10.0039 0.65625 9.9362 0.53125 9.80078C0.395833 9.67578 0.328125 9.52474 0.328125 9.34766C0.328125 9.16016 0.395833 8.9987 0.53125 8.86328L4.0625 5.33203L0.53125 1.80078C0.395833 1.67578 0.328125 1.52474 0.328125 1.34766C0.328125 1.16016 0.395833 0.998698 0.53125 0.863281C0.65625 0.738281 0.8125 0.675781 1 0.675781C1.1875 0.675781 1.34375 0.738281 1.46875 0.863281L5.46875 4.86328C5.60417 4.9987 5.67188 5.16016 5.67188 5.34766C5.67188 5.52474 5.60417 5.67578 5.46875 5.80078L1.46875 9.80078Z" fill="#000"/>
        </svg>
      </button>
    </div>
    <div class="new-arrivals-slider">
      {% liquid
        assign collection_handle = section.settings.collection | default: 'Clothes'
        assign product_limit = section.settings.product_limit | default: 4
        assign new_arrivals_collection = collections[collection_handle]
      %}

      {% for product in new_arrivals_collection.products reversed limit: product_limit %}
        <div class="new-arrivals-item">
          {% if forloop.index == 1 %}
            <span class="badge badge-soldout">Sold Out</span>
            <div class="na-mobile-container">
              <span class="badge badge-discount">-10%</span>
              <span class="badge badge-preorder">Preorder</span>
            </div>
          {% elsif forloop.index == 3 %}
            <span class="badge badge-discount">-10%</span>
            <span class="badge badge-preorder">Preorder</span>
          {% endif %}
          <a href="{{ product.url }}" aria-label="{{ product.title }}">
            <div class="product-img-wrapper">
              <img
                class="product-image"
                src="{{ product.featured_image | image_url: width: 330 }}"
                alt="{{ product.title }}"
                width="330"
                height="440"
                loading="lazy"
                data-black="{{ product.featured_image | image_url: width: 330 }}"
                data-red="{{ product.featured_image | image_url: width: 330 }}"
                data-white="{{ product.featured_image | image_url: width: 330 }}"
              >

              {% if forloop.index == 1 %}
                <div class="na-content">
                  <div class="na-content-wrapper">
                    <span class="na-running-text">HOT SALE 10% OFF</span>
                    <svg width="9" height="12" viewBox="0 0 9 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M8.45115 5.15038L3.46899 11.9004C3.44574 11.9318 3.41543 11.9574 3.38049 11.9751C3.34555 11.9927 3.30696 12.0019 3.26782 12.0019C3.23487 12.002 3.20223 11.9954 3.17187 11.9826C3.12021 11.9612 3.07723 11.9231 3.04983 11.8744C3.02242 11.8256 3.01218 11.7691 3.02075 11.7138L3.70849 7.25192H0.750003C0.703741 7.25192 0.658387 7.23909 0.618987 7.21484C0.579587 7.1906 0.547686 7.1559 0.526835 7.1146C0.505983 7.07331 0.496999 7.02704 0.500882 6.98094C0.504765 6.93484 0.521363 6.89072 0.548828 6.8535L5.53099 0.103519C5.56418 0.0585335 5.61149 0.0259722 5.66537 0.011038C5.71924 -0.00389616 5.77657 -0.000341354 5.82819 0.0211344C5.8798 0.0426102 5.92273 0.0807675 5.95011 0.129509C5.97749 0.178251 5.98775 0.234764 5.97924 0.290018L5.29149 4.75193H8.24998C8.29624 4.75193 8.3416 4.76476 8.38101 4.789C8.42041 4.81325 8.45232 4.84795 8.47317 4.88925C8.49402 4.93055 8.503 4.97683 8.49912 5.02293C8.49523 5.06903 8.47862 5.11315 8.45115 5.15038Z" fill="#FFB800"/>
                    </svg>
                    <span class="na-running-text">HOT SALE 10% OFF</span>
                  </div>
                </div>
              {% endif %}

              <div class="product-icon-wrapper">
                <div class="product-icon-heart product-icon">
                  {% render 'wishlist-button', product: product %}
                </div>
                <div class="product-icon-eye product-icon">
                  <a href="#" aria-label="icon-eye" data-quick-view data-product-id="{{ product.id }}" data-product-handle="{{ product.handle }}" data-product-title="{{ product.title | escape }}" data-product-image="{{ product.featured_image | image_url: width: 600 }}">
                    <svg width="14" height="14" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M0.0683594 5.9043C0.0683594 5.9043 0.123047 5.80404 0.232422 5.60352C0.341797 5.39388 0.501302 5.13867 0.710938 4.83789C0.847656 4.64648 0.998047 4.44141 1.16211 4.22266C1.33529 3.99479 1.52669 3.76693 1.73633 3.53906C2.00065 3.25651 2.29232 2.97396 2.61133 2.69141C2.93945 2.40885 3.29492 2.14909 3.67773 1.91211C4.14258 1.62044 4.65299 1.38346 5.20898 1.20117C5.76497 1.00977 6.36198 0.914062 7 0.914062C7.63802 0.914062 8.23503 1.00977 8.79102 1.20117C9.34701 1.38346 9.85742 1.62044 10.3223 1.91211C10.7051 2.14909 11.056 2.40885 11.375 2.69141C11.7031 2.97396 11.9993 3.25651 12.2637 3.53906C12.4733 3.76693 12.6602 3.99479 12.8242 4.22266C12.9974 4.44141 13.1523 4.64648 13.2891 4.83789C13.4987 5.13867 13.6582 5.39388 13.7676 5.60352C13.877 5.80404 13.9316 5.9043 13.9316 5.9043C13.9772 5.99544 14 6.08659 14 6.17773C14 6.26888 13.9772 6.35091 13.9316 6.42383C13.9316 6.42383 13.877 6.52865 13.7676 6.73828C13.6582 6.9388 13.4987 7.19401 13.2891 7.50391C13.1523 7.69531 12.9974 7.90495 12.8242 8.13281C12.6602 8.35156 12.4733 8.57487 12.2637 8.80273C11.9993 9.08529 11.7031 9.36784 11.375 9.65039C11.056 9.93294 10.7051 10.1927 10.3223 10.4297C9.85742 10.7214 9.34701 10.9583 8.79102 11.1406C8.23503 11.3229 7.63802 11.4141 7 11.4141C6.36198 11.4141 5.76497 11.3229 5.20898 11.1406C4.65299 10.9583 4.14258 10.7214 3.67773 10.4297C3.29492 10.1927 2.93945 9.93294 2.61133 9.65039C2.29232 9.36784 2.00065 9.08529 1.73633 8.80273C1.52669 8.57487 1.33529 8.35156 1.16211 8.13281C0.998047 7.90495 0.847656 7.69531 0.710938 7.50391C0.501302 7.19401 0.341797 6.9388 0.232422 6.73828C0.123047 6.52865 0.0683594 6.42383 0.0683594 6.42383C0.0227865 6.3418 0 6.25521 0 6.16406C0 6.07292 0.0227865 5.98633 0.0683594 5.9043ZM1.24414 6.16406C1.29883 6.24609 1.35807 6.34635 1.42188 6.46484C1.49479 6.57422 1.58138 6.70182 1.68164 6.84766C1.80013 7.02083 1.93685 7.20768 2.0918 7.4082C2.24674 7.60872 2.41536 7.80924 2.59766 8.00977C2.83464 8.26497 3.0944 8.51562 3.37695 8.76172C3.65951 9.00781 3.96484 9.23568 4.29297 9.44531C4.6849 9.68229 5.10417 9.87826 5.55078 10.0332C6.00651 10.179 6.48958 10.252 7 10.252C7.51042 10.252 7.98893 10.179 8.43555 10.0332C8.89128 9.87826 9.3151 9.68229 9.70703 9.44531C10.0352 9.23568 10.3405 9.00781 10.623 8.76172C10.9056 8.51562 11.1654 8.26497 11.4023 8.00977C11.5846 7.80924 11.7533 7.60872 11.9082 7.4082C12.0632 7.20768 12.1999 7.02083 12.3184 6.84766C12.4186 6.70182 12.5007 6.57422 12.5645 6.46484C12.6374 6.34635 12.7012 6.24609 12.7559 6.16406C12.7012 6.08203 12.6374 5.98633 12.5645 5.87695C12.5007 5.75846 12.4186 5.63086 12.3184 5.49414C12.1999 5.32096 12.0632 5.13411 11.9082 4.93359C11.7533 4.73307 11.5846 4.53255 11.4023 4.33203C11.1654 4.06771 10.9056 3.8125 10.623 3.56641C10.3405 3.32031 10.0352 3.09701 9.70703 2.89648C9.3151 2.65039 8.89128 2.45443 8.43555 2.30859C7.98893 2.16276 7.51042 2.08984 7 2.08984C6.48958 2.08984 6.00651 2.16276 5.55078 2.30859C5.10417 2.45443 4.6849 2.65039 4.29297 2.89648C3.96484 3.09701 3.65951 3.32031 3.37695 3.56641C3.0944 3.8125 2.83464 4.06771 2.59766 4.33203C2.41536 4.53255 2.24674 4.73307 2.0918 4.93359C1.93685 5.13411 1.80013 5.32096 1.68164 5.49414C1.58138 5.63086 1.49479 5.75846 1.42188 5.87695C1.35807 5.98633 1.29883 6.08203 1.24414 6.16406ZM9.33789 6.16406C9.33789 6.49219 9.27409 6.79753 9.14648 7.08008C9.02799 7.36263 8.86393 7.60872 8.6543 7.81836C8.44466 8.02799 8.19401 8.19661 7.90234 8.32422C7.61979 8.44271 7.31901 8.50195 7 8.50195C6.68099 8.50195 6.37565 8.44271 6.08398 8.32422C5.80143 8.19661 5.55534 8.02799 5.3457 7.81836C5.13607 7.60872 4.96745 7.36263 4.83984 7.08008C4.72135 6.79753 4.66211 6.49219 4.66211 6.16406C4.66211 5.84505 4.72135 5.54427 4.83984 5.26172C4.96745 4.97917 5.13607 4.73307 5.3457 4.52344C5.55534 4.3138 5.80143 4.14974 6.08398 4.03125C6.37565 3.90365 6.68099 3.83984 7 3.83984C7.31901 3.83984 7.61979 3.90365 7.90234 4.03125C8.19401 4.14974 8.44466 4.3138 8.6543 4.52344C8.86393 4.73307 9.02799 4.97917 9.14648 5.26172C9.27409 5.54427 9.33789 5.84505 9.33789 6.16406ZM8.16211 6.16406C8.16211 6.00911 8.13021 5.86328 8.06641 5.72656C8.01172 5.58073 7.92969 5.45312 7.82031 5.34375C7.72005 5.23438 7.59701 5.15234 7.45117 5.09766C7.31445 5.03385 7.16406 5.00195 7 5.00195C6.83594 5.00195 6.68099 5.03385 6.53516 5.09766C6.39844 5.15234 6.27995 5.23438 6.17969 5.34375C6.07031 5.45312 5.98372 5.58073 5.91992 5.72656C5.86523 5.86328 5.83789 6.00911 5.83789 6.16406C5.83789 6.32812 5.86523 6.48307 5.91992 6.62891C5.98372 6.76562 6.07031 6.88867 6.17969 6.99805C6.27995 7.09831 6.39844 7.18034 6.53516 7.24414C6.68099 7.30794 6.83594 7.33984 7 7.33984C7.16406 7.33984 7.31445 7.30794 7.45117 7.24414C7.59701 7.18034 7.72005 7.09831 7.82031 6.99805C7.92969 6.88867 8.01172 6.76562 8.06641 6.62891C8.13021 6.48307 8.16211 6.32812 8.16211 6.16406Z" fill="#111111"/>
                    </svg>
                  </a>
                </div>
                <div class="product-icon-cart product-icon">
                  {% if product.selected_or_first_available_variant %}
                    <a href="#" aria-label="icon-cart" data-add-to-cart data-product-id="{{ product.selected_or_first_available_variant.id }}">
                      <svg width="14" height="14" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.0452 10.8307C9.89199 10.8307 9.74503 10.7691 9.63667 10.6595C9.52831 10.55 9.46743 10.4013 9.46743 10.2463H8.31182C8.31182 10.7113 8.49444 11.1572 8.81952 11.486C9.1446 11.8147 9.58551 11.9994 10.0452 11.9994C10.505 11.9994 10.9459 11.8147 11.271 11.486C11.596 11.1572 11.7787 10.7113 11.7787 10.2463H10.623C10.623 10.4013 10.5622 10.55 10.4538 10.6595C10.3454 10.7691 10.1985 10.8307 10.0452 10.8307Z" fill="#111111"/>
                        <path d="M
                        5.97917 10.8307C5.82593 10.8307 5.67896 10.7691 5.5706 10.6595C5.46224 10.55 5.40136 10.4013 5.40136 10.2463H4.24033C4.24033 10.4769 4.28523 10.7052 4.37247 10.9182C4.45971 11.1312 4.58758 11.3247 4.74878 11.4878C4.90998 11.6508 5.10135 11.7801 5.31196 11.8683C5.52258 11.9566 5.74831 12.002 5.97628 12.002C6.20425 12.002 6.42998 11.9566 6.6406 11.8683C6.85121 11.7801 7.04258 11.6508 7.20378 11.4878C7.36498 11.3247 7.49285 11.1312 7.58009 10.9182C7.66733 10.7052 7.71223 10.4769 7.71223 10.2463H6.55661C6.55661 10.4013 6.49579 10.5498 6.38751 10.6594C6.27923 10.769 6.13235 10.8306 5.97917 10.8307Z" fill="#111111"/>
                        <path d="M13.5173 1.16243C13.4858 1.15701 13.4539 1.15432 13.4219 1.1544H4.17702C4.02377 1.1544 3.87681 1.21596 3.76845 1.32555C3.66009 1.43514 3.59921 1.58378 3.59921 1.73876C3.59921 1.89374 3.66009 2.04237 3.76845 2.15196C3.87681 2.26155 4.02377 2.32312 4.17702 2.32312H12.7398L12.587 3.25006L11.777 8.16673H4.23949L2.27495 3.25006L1.10308 0.342867C1.04111 0.206103 0.929375 0.0987791 0.79113 0.0432371C0.652886 -0.012305 0.498786 -0.0117859 0.360911 0.0446864C0.223035 0.101159 0.112007 0.209233 0.0509375 0.346412C-0.0101315 0.48359 -0.0165356 0.639304 0.0330584 0.781138L1.90407 5.42425L3.18102 8.84714C3.27528 9.1353 3.46993 9.33545 3.75088 9.33545H12.2663C12.4031 9.33551 12.5355 9.28647 12.64 9.19705C12.7444 9.10763 12.814 8.98364 12.8365 8.84714L13.7589 3.25006L13.9921 1.83481C14.0173 1.68196 13.9814 1.52527 13.8924 1.39918C13.8033 1.27309 13.6684 1.18793 13.5173 1.16243Z" fill="#111111"/>
                      </svg>
                    </a>
                  {% endif %}
                </div>
              </div>
            </div>
          </a>

          <div class="product-info">
            <div class="product-title">
              <a href="{{ product.url }}" aria-label="product">
                {{ product.title }}
              </a>
              {% if product.category != blank %}
                <span class="na-mobile-category-default"> {{ product.category }} </span>
              {% else %}
                <span class="na-mobile-category-default">F-shirt</span>
              {% endif %}
            </div>
            <div class="product-rating">
              {% assign mod = forloop.index0 | modulo: 2 %}
              {% if mod == 0 %}
                {% assign rating = 5 %}
              {% else %}
                {% assign rating = 4 %}
              {% endif %}

              {% for i in (1..5) %}
                {% if i <= rating %}
                  <span>
                    <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M9.96853 3.78143C10.0011 3.88335 10.0043 3.98868 9.9783 4.0974C9.95226 4.20612 9.89692 4.29785 9.81228 4.37259L7.63455 6.37033L8.27908 9.32616C8.29861 9.43488 8.28885 9.5402 8.24978 9.64213C8.21723 9.74405 8.15864 9.82899 8.074 9.89694C7.98286 9.96489 7.8852 9.99887 7.78103 9.99887C7.67687 10.0057 7.57921 9.98188 7.48806 9.92752L4.99783 8.36806L2.5076 9.92752C2.46853 9.94791 2.42296 9.96489 2.37088 9.97848C2.3253 9.99207 2.27973 9.99887 2.23416 9.99887C2.18207 9.99887 2.12674 9.98868 2.06814 9.96829C2.01606 9.9547 1.96723 9.93092 1.92166 9.89694C1.83702 9.82899 1.77517 9.74405 1.73611 9.64213C1.70356 9.5402 1.69705 9.43488 1.71658 9.32616L2.36111 6.37033L0.183377 4.37259C0.0987413 4.29785 0.0434028 4.20612 0.0173611 4.0974C-0.00868056 3.98868 -0.00542535 3.88335 0.0271267 3.78143C0.0596788 3.67271 0.115017 3.58437 0.193142 3.51642C0.277778 3.44847 0.372179 3.4077 0.476345 3.39411L3.36697 3.12911L4.50955 0.336353C4.54861 0.234428 4.61372 0.152888 4.70486 0.0917327C4.79601 0.0305776 4.89366 0 4.99783 0C5.102 0 5.19965 0.0305776 5.2908 0.0917327C5.38194 0.152888 5.44705 0.234428 5.48611 0.336353L6.62869 3.12911L9.51931 3.39411C9.62348 3.4077 9.71463 3.44847 9.79275 3.51642C9.87739 3.58437 9.93598 3.67271 9.96853 3.78143Z" fill="#111111"/>
                    </svg>
                  </span>
                {% else %}
                  <span>
                    <svg width="11" height="10" viewBox="0 0 11 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M8.75027 9.99886C8.85519 10.0006 8.95737 9.96365 9.03897 9.89449C9.12544 9.83625 9.18905 9.74734 9.21816 9.64399C9.2475 9.54189 9.2475 9.43298 9.21816 9.33088L8.60094 6.36671L10.7712 4.3732C10.861 4.30709 10.9275 4.21168 10.9603 4.10183C10.9852 3.99556 10.9852 3.88455 10.9603 3.77828C10.9317 3.6719 10.8683 3.57951 10.7811 3.51734C10.7041 3.45067 10.6111 3.40736 10.5123 3.3921L7.60544 3.13117L6.47056 0.333991C6.42964 0.234198 6.36003 0.150279 6.27145 0.093935C6.18628 0.0332073 6.08576 0.000500933 5.98276 0V8.34978L8.46157 9.9258C8.54847 9.98039 8.64919 10.0059 8.75027 9.99886Z" fill="#C8C8C8"/>
                      <path d="M3.21134 9.99886C3.10642 10.0006 3.00424 9.96365 2.92264 9.89449C2.83616 9.83625 2.77256 9.74734 2.74345 9.64399C2.71411 9.54189 2.71411 9.43298 2.74345 9.33088L3.36066 6.36671L1.19046 4.3732C1.10059 4.30709 1.03409 4.21168 1.00131 4.10183C0.97642 3.99556 0.97642 3.88455 1.00131 3.77828C1.0299 3.6719 1.09335 3.57951 1.1805 3.51734C1.25752 3.45067 1.35047 3.40736 1.44929 3.3921L4.35617 3.13117L5.49105 0.333991C5.53197 0.234198 5.60157 0.150279 5.69015 0.093935C5.77533 0.0332073 5.87585 0.000500933 5.97885 0V8.34978L3.50004 9.9258C3.41314 9.98039 3.31242 10.0059 3.21134 9.99886Z" fill="#111111"/>
                    </svg>
                  </span>
                {% endif %}
              {% endfor %}
            </div>

            {% assign index_mod = forloop.index0 | modulo: 2 %}
            {% if product.compare_at_price > product.price %}
              <div
                class="product-price"
                style="color: {% if index_mod == 0 %}rgba(17, 17, 17, 1){% else %}rgba(215, 63, 15, 1){% endif %};"
              >
                {{ product.price | money }}
                <span class="product-compare-price">{{ product.compare_at_price | money }}</span>
              </div>
            {% else %}
              <div
                class="product-price"
                style="color: {% if index_mod == 0 %}rgba(17, 17, 17, 1){% else %}rgba(215, 63, 15, 1){% endif %};"
              >
                {{ product.price | money }}
              </div>
            {% endif %}

            <div class="product-colors">
              {% assign color_option_index = null %}
              {% for option in product.options_with_values %}
                {% if option.name == 'Color' or option.name == 'Colour' %}
                  {% assign color_option_index = forloop.index0 %}
                {% endif %}
              {% endfor %}
              {% if color_option_index != null %}
                {% assign color_values_string = '' %}
                {% for variant in product.variants %}
                  {% assign color = variant.options[color_option_index] %}
                  {% unless color_values_string contains color %}
                    {% if color_values_string == '' %}
                      {% assign color_values_string = color %}
                    {% else %}
                      {% assign color_values_string = color_values_string | append: ',' | append: color %}
                    {% endif %}
                  {% endunless %}
                {% endfor %}
                {% assign color_values = color_values_string | split: ',' %}
                {% for color in color_values %}
                  {% assign variant_image = '' %}
                  {% for variant in product.variants %}
                    {% assign color_option = variant.options[color_option_index] %}
                    {% if color_option == color %}
                      {% assign variant_image = variant.featured_image | image_url: width: 330 %}
                      {% break %}
                    {% endif %}
                  {% endfor %}
                  <span class="color-swatch-wrapper{% if forloop.first %} selected{% endif %}">
                    <span
                      class="color-swatch"
                      data-color="{{ color | handleize }}"
                      data-image="{{ variant_image }}"
                      title="{{ color }}"
                      style="background: {{ color | downcase }};"
                    ></span>
                  </span>
                {% endfor %}
              {% endif %}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

{% schema %}
{
  "name": "New Arrivals",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.new_arrivals.settings.title_description.content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "t:sections.new_arrivals.settings.title.label",
      "default": "New Arrivals"
    },
    {
      "type": "text",
      "id": "description",
      "label": "t:sections.new_arrivals.settings.description.label",
      "default": "Here’s some of our most popular products people are in love with."
    },
    {
      "type": "header",
      "content": "t:sections.new_arrivals.settings.collection_header.content"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.new_arrivals.settings.collection.label"
    },
    {
      "type": "header",
      "content": "t:sections.new_arrivals.settings.product_limit_header.content"
    },
    {
      "type": "range",
      "id": "product_limit",
      "label": "t:sections.new_arrivals.settings.product_limit.label",
      "min": 1,
      "max": 12,
      "step": 1,
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "New Arrivals"
    }
  ]
}
{% endschema %}
